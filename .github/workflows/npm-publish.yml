# GitHub Actions WorkFlow Name

name: template-transform npm publish

#Event Trigger for this Workflow

on:
  workflow_dispatch:
  push:
    branches: [ 'trunk' ]

#Jobs to perform based on event occurred

jobs:
  npm-publish:
    name: npm-publish
    runs-on: ubuntu-latest

    #Global Env variables declare here
    env:
      SUBDOMAIN: template-transform
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # Steps to execute in this job
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis


      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

 
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run:  npm install
      

    
      - name: Run unit test if present only
        run:  npm run test --if-present


      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      

      - name: NPM publish
        run:  npm publish --access public


      - name: Slack Notification
        if: always() # Pick up events even if the job fails or is canceled.
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        with:
          status: ${{ job.status }}
          author_name: ${{ env.SUBDOMAIN }} - pull req event check status
          mention: 'here'
          if_mention: failure,cancelled
          job_name: npm-publish # Match the name above.
          fields: repo,commit,eventName,ref,workflow,message,author,job,took
          custom_payload: |
            {
            username: 'GitHub Action CI WorkFlow',
            icon_emoji: ':github:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text:
             `${process.env.AS_REPO}\n
              ${process.env.AS_COMMIT}\n
              ${process.env.AS_EVENT_NAME}\n
              @${process.env.AS_REF}\n
              @${process.env.AS_WORKFLOW}\n
              ${process.env.AS_MESSAGE}\n
              ${process.env.AS_AUTHOR}\n
              ${process.env.AS_JOB}\n
              ${process.env.AS_TOOK}`,
            }]
            }